{"version":3,"file":"static/js/962.585af4eb.chunk.js","mappings":"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","sources":["modules/blogs/BulkUploadListing.jsx","modules/blogs/service.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Table, Button, Spin } from \"../../component\";\nimport Home from \"../../component/SideBar\";\nimport { getBulkData } from \"./service\";\n\nconst BulkUploadListing = () => {\n  const [bulkUploads, setBulkUploads] = useState([]);\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(true);\n\n  const handleViewBulkUploadErrors = (session_id) => {\n    navigate(`/bulk-errors/${session_id}`);\n  };\n\n  const fetchApiResponse = async () => {\n    try {\n      const apiResponse = await getBulkData();\n      setBulkUploads(apiResponse.data.data);\n    } catch (error) {\n      alert(\"Error fetching data:\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchApiResponse();\n  }, []);\n\n  if (loading) {\n    return <Spin size=\"large\" />;\n  }\n\n  const columns = [\n    {\n      title: \"Bulk Uploads Details\",\n      dataIndex: \"details\",\n      key: \"details\",\n      render: (text, record) => (\n        <div className=\"record-details\" data-testid=\"record-details\">\n          <div>Records Processed: {record.recordsProcessed}</div>\n          <div>Errors: {record.totalErrors}</div>\n          <div>Time Taken: {record.timeTaken}</div>\n          <div>Uploaded At: {new Date(record.createdAt).toLocaleString()}</div>\n          <div>Session Id: {record.session_id}</div>\n        </div>\n      ),\n    },\n    {\n      title: \"Actions\",\n      dataIndex: \"actions\",\n      key: \"actions\",\n      render: (text, record) => (\n        <div className=\"view-errors\">\n          <Button\n            data-testid=\"view-error\"\n            onClick={() => handleViewBulkUploadErrors(record.session_id)}\n            name=\"View Errors\"\n          />\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <Home>\n      <div className=\"bulk-upload-container\">\n        <Table dataSource={bulkUploads} columns={columns} />\n      </div>\n    </Home>\n  );\n};\n\nexport default BulkUploadListing;\n","import axios from \"axios\";\nimport { Base_API } from \"../../config/config\";\n\nconst getBlogs = async (page, limit) => {\n  return await axios.get(\n    `${Base_API}/get?page=${page}&limit=${limit}`,\n\n    {\n      headers: {\n        Authorization: localStorage.getItem(\"authToken\"),\n      },\n    }\n  );\n};\n\nconst getSearchedBlogs = async (search, page, limit) => {\n  return await axios.get(\n    `${Base_API}/search/${search}?page=${page}&limit=${limit}`\n  );\n};\n\nconst getFilteredBlogs = async (filterValue, page, limit) => {\n  return await axios.get(\n    `${Base_API}/getbycategories/${filterValue}?page=${page}&limit=${limit}`\n  );\n};\n\nconst getBulkErrorData = async (session_id) => {\n  return await axios.get(`${Base_API}/bulk-uploads-errors/${session_id}`);\n};\n\nconst getBulkData = async () => {\n  return await axios.get(`${Base_API}/bulk-uploads-list`);\n};\n\nconst uploadBulk = async (formData) => {\n  return await axios.post(`${Base_API}/bulk-upload`, formData, {\n    headers: {\n      \"Content-Type\": \"multipart/form-data\",\n      Authorization: localStorage.getItem(\"authToken\"),\n    },\n  });\n};\n\nconst deleteData = async (bid) => {\n  return await axios.delete(`${Base_API}/${bid}`, {\n    headers: {\n      Authorization: localStorage.getItem(\"authToken\"),\n    },\n  });\n};\n\nconst fetchEditData = async (id) => {\n  return await axios.get(`${Base_API}/getbyid/${id}`);\n};\n\nconst EditData = async (updatedBlogsItem, id) => {\n  await axios.patch(`${Base_API}/updatebyid/${id}`, updatedBlogsItem, {\n    headers: {\n      Authorization: localStorage.getItem(\"authToken\"),\n    },\n  });\n};\n\nconst createData = async (newBlogsItem) => {\n  return await axios.post(`${Base_API}/create`, newBlogsItem, {\n    headers: {\n      Authorization: localStorage.getItem(\"authToken\"),\n    },\n  });\n};\n\nconst detailData = async (id) => {\n  return await axios.get(`${Base_API}/getbyid/${id}`);\n};\n\nexport {\n  getBlogs,\n  getBulkData,\n  deleteData,\n  fetchEditData,\n  EditData,\n  createData,\n  getBulkErrorData,\n  uploadBulk,\n  detailData,\n  getSearchedBlogs,\n  getFilteredBlogs,\n};\n"],"names":["BulkUploadListing","bulkUploads","setBulkUploads","useState","navigate","useNavigate","loading","setLoading","useEffect","async","apiResponse","getBulkData","data","error","alert","fetchApiResponse","_jsx","Spin","size","columns","title","dataIndex","key","render","text","record","_jsxs","className","children","recordsProcessed","totalErrors","timeTaken","Date","createdAt","toLocaleString","session_id","Button","onClick","handleViewBulkUploadErrors","concat","name","Home","Table","dataSource","getBlogs","page","limit","axios","get","Base_API","headers","Authorization","localStorage","getItem","getSearchedBlogs","search","getFilteredBlogs","filterValue","getBulkErrorData","uploadBulk","post","formData","deleteData","delete","bid","fetchEditData","id","EditData","updatedBlogsItem","patch","createData","newBlogsItem","detailData"],"sourceRoot":""}