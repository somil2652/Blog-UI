{"version":3,"file":"static/js/582.60668c3e.chunk.js","mappings":"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","sources":["modules/blogs/BulkErrorDetail.jsx","modules/blogs/service.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Table, Spin, Home } from \"../../component\";\nimport { getBulkErrorData } from \"./service\";\n\nconst BulkErrorDetail = () => {\n  const { session_id } = useParams();\n\n  const [bulkErrors, setBulkErrors] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [myError, setMyError] = useState(\"\");\n\n  const handleApiResponse = async () => {\n    try {\n      const apiResponse = await getBulkErrorData(session_id);\n      setBulkErrors(apiResponse.data.data);\n    } catch (error) {\n      console.log(\"Error fetching data:\");\n\n      setMyError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    handleApiResponse();\n  }, [session_id]);\n\n  const columns = [\n    {\n      title: \"Row Number\",\n      dataIndex: \"rowNumber\",\n      key: \"rowNumber\",\n    },\n    {\n      title: \"Error Detail\",\n      dataIndex: \"errorDetails\",\n      key: \"errorDetails\",\n    },\n  ];\n\n  if (loading) {\n    return <Spin data-testid=\"spinner\" size=\"large\" />;\n  }\n\n  if (bulkErrors.length === 0) {\n    return <h3>No Record Found!</h3>;\n  }\n\n  if (myError) {\n    return <h3>Error fetching data</h3>;\n  }\n\n  return (\n    <Home>\n      <div className=\"bulk-error-container\">\n        <div className=\"table-container\">\n          <Table\n            data-tesid=\"myTable\"\n            dataSource={bulkErrors}\n            columns={columns}\n            pagination={false}\n          />\n        </div>\n      </div>\n    </Home>\n  );\n};\n\nexport default BulkErrorDetail;\n","import axios from \"axios\";\nimport { Base_API } from \"../../config/config\";\n\nconst getBlogs = async (page, limit) => {\n  return await axios.get(\n    `${Base_API}/get?page=${page}&limit=${limit}`,\n\n    {\n      headers: {\n        Authorization: localStorage.getItem(\"authToken\"),\n      },\n    }\n  );\n};\n\nconst getSearchedBlogs = async (search, page, limit) => {\n  return await axios.get(\n    `${Base_API}/search/${search}?page=${page}&limit=${limit}`\n  );\n};\n\nconst getFilteredBlogs = async (filterValue, page, limit) => {\n  return await axios.get(\n    `${Base_API}/getbycategories/${filterValue}?page=${page}&limit=${limit}`\n  );\n};\n\nconst getBulkErrorData = async (session_id) => {\n  return await axios.get(`${Base_API}/bulk-uploads-errors/${session_id}`);\n};\n\nconst getBulkData = async () => {\n  return await axios.get(`${Base_API}/bulk-uploads-list`);\n};\n\nconst uploadBulk = async (formData) => {\n  return await axios.post(`${Base_API}/bulk-upload`, formData, {\n    headers: {\n      \"Content-Type\": \"multipart/form-data\",\n      Authorization: localStorage.getItem(\"authToken\"),\n    },\n  });\n};\n\nconst deleteData = async (bid) => {\n  return await axios.delete(`${Base_API}/${bid}`, {\n    headers: {\n      Authorization: localStorage.getItem(\"authToken\"),\n    },\n  });\n};\n\nconst fetchEditData = async (id) => {\n  return await axios.get(`${Base_API}/getbyid/${id}`);\n};\n\nconst EditData = async (updatedBlogsItem, id) => {\n  await axios.patch(`${Base_API}/updatebyid/${id}`, updatedBlogsItem, {\n    headers: {\n      Authorization: localStorage.getItem(\"authToken\"),\n    },\n  });\n};\n\nconst createData = async (newBlogsItem) => {\n  return await axios.post(`${Base_API}/create`, newBlogsItem, {\n    headers: {\n      Authorization: localStorage.getItem(\"authToken\"),\n    },\n  });\n};\n\nconst detailData = async (id) => {\n  return await axios.get(`${Base_API}/getbyid/${id}`);\n};\n\nexport {\n  getBlogs,\n  getBulkData,\n  deleteData,\n  fetchEditData,\n  EditData,\n  createData,\n  getBulkErrorData,\n  uploadBulk,\n  detailData,\n  getSearchedBlogs,\n  getFilteredBlogs,\n};\n"],"names":["BulkErrorDetail","session_id","useParams","bulkErrors","setBulkErrors","useState","loading","setLoading","myError","setMyError","useEffect","async","apiResponse","getBulkErrorData","data","error","console","log","message","handleApiResponse","_jsx","Spin","size","length","children","Home","className","Table","dataSource","columns","title","dataIndex","key","pagination","getBlogs","page","limit","axios","get","concat","Base_API","headers","Authorization","localStorage","getItem","getSearchedBlogs","search","getFilteredBlogs","filterValue","getBulkData","uploadBulk","post","formData","deleteData","delete","bid","fetchEditData","id","EditData","updatedBlogsItem","patch","createData","newBlogsItem","detailData"],"sourceRoot":""}